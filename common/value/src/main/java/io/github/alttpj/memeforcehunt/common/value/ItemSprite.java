/*
 * Copyright 2020-2020 the ALttPJ Team @ https://github.com/alttpj
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.alttpj.memeforcehunt.common.value;

import io.github.alttpj.library.image.Tile;

/**
 * An item sprite is a composition of multiple tiles.
 */
public interface ItemSprite {

  /**
   * A unique identifier for this tile. Can be generated by a ULID implementation.
   *
   * @return a ULID.
   */
  ULID.Value getSpriteId();

  /**
   * Returns a short, non-changing identifier. Must not contain spaces, ASCII only.
   *
   * @return a short human-readable ID.
   */
  String getSpriteName();

  /**
   * Returns a slightly longer version of the sprite name. Can contain spaces and special chars etc.
   *
   * @return a display name.
   */
  String getDisplayName();

  String getDescription();

  String getAuthor();

  Tile[] getTiles();

  /**
   * The tile numbers in the spritemap for the tiles.
   *
   * <p>For MemeforceHunt, this is always 44, 45, 60, 61.</p>
   *
   * @return the tile position in the spritemap.
   */
  int[] getTilePositions();

  /**
   * The offsets in the resulting sprite map. It is easily derived from the positions,
   * as each tile is 8x8 anyway.
   *
   * @return the byte offset in the spritemap for each tile.
   */
  default int[] getTileOffsets() {
    final int[] offsets = new int[getTilePositions().length];
    final int[] tilePositions = getTilePositions();

    for (int tileNumber = 0; tileNumber < tilePositions.length; tileNumber++) {
      final int tilePosition = tilePositions[tileNumber];
      offsets[tileNumber] = tilePosition * getPalette().getBitsPerPixel() * 8;
    }

    return offsets;
  }

  ItemPalette getPalette();
}
