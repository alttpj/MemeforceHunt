# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'm*'

jobs:
  build:
    if: (github.event_name == 'push' && github.event.pull_request == null) || github.event_name == 'pull_request'

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        java: [ 21 ]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Debug - Print event name and pull_request context
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Pull Request Context: ${{ github.event.pull_request }}"
          echo "Condition Evaluation: ${{ (github.event_name == 'push' && github.event.pull_request == null) || github.event_name == 'pull_request' }}"

      - name: Restore Maven dependencies cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "semeru"

      - name: Build with Maven (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: mvn clean verify --batch-mode -Pjlink -Pdocs -Prun-its "-Djavafx.platform=win"

      - name: Build with Maven (linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: mvn clean verify --batch-mode -Pjlink,docs,run-its -Djavafx.platform=linux

      - name: Build with Maven (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: mvn clean verify --batch-mode -Pjlink,docs,run-its -Djavafx.platform=mac

      - name: Deploy snapshot
        if: ${{ matrix.java == '21' }}
        run: mvn deploy --batch-mode -Pdocs -Pdeploy-github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          # Artifact name
          name: jlink-${{ matrix.os }}
          # A file, directory or wildcard pattern that describes what to upload
          path: app/target/memeforce-app*.zip
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Remove io.github.alttpj artifacts from Maven cache
        shell: bash
        run: |
          rm -rf ~/.m2/repository/io/github/alttpj
          rm -rf ~/.m2/repository/cached/io/github/alttpj

      - name: Save Maven dependencies to cache
        uses: actions/cache/save@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}

